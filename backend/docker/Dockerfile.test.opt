###########
# BUILDER #
###########

# pull official base image
FROM python:3.11.6-alpine as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
  && apk add gcc g++ git python3-dev musl-dev linux-headers libffi-dev

RUN pip install --upgrade pip

# install dependencies
COPY ./requirements.txt .
COPY ./requirements_test.txt .
COPY ./requirements_dev.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt -r requirements_dev.txt -r requirements_test.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.11.6-alpine

# create directory for the fastapi_server user
RUN mkdir -p /home/fastapi_server

# create the fastapi_server user
RUN addgroup -S fastapi_server && adduser -S fastapi_server -G fastapi_server

# create the appropriate directories
ENV APP_HOME=/home/fastapi_server/fastapi_server
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# install dependencies
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
COPY --from=builder /usr/src/app/requirements_dev.txt .
COPY --from=builder /usr/src/app/requirements_test.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/* -r requirements.txt -r requirements_dev.txt -r requirements_test.txt

WORKDIR /home/fastapi_server/fastapi_server

# # change to the app user
USER fastapi_server

# run entrypoint.prod.sh
ENTRYPOINT ["/home/fastapi_server/fastapi_server/docker/entrypoint.test.sh"]
